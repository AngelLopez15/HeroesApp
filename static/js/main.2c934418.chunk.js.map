{"version":3,"sources":["data/heroes.js","superheroe.svg","types/types.js","auth/AuthContext.js","components/login/LoginScreen.js","components/ui/Navbar.js","components/heroes/HeroCard.js","components/heroes/HeroesList.js","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.js","selectors/getHeroById.js","components/heroes/HeroesScreen.js","components/dc/DcScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","routers/DashBoardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","auth/authReducer.js","HeroesApp.js","index.js"],"names":["heroes","module","exports","types","AuthContext","createContext","LoginScreen","history","dispatch","useContext","className","type","onClick","lastPath","localStorage","getItem","payload","name","replace","Navbar","user","useHistory","to","src","img","alt","data-toggle","data-target","aria-controls","aria-expanded","document","querySelector","classList","toggle","aria-label","id","HeroCard","superhero","alter_ego","first_appearance","characters","style","maxWidth","HeroesList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","key","MarvelScreen","require","HeroesScreen","heroeId","useParams","find","length","push","goBack","DcScreen","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","reset","handleInputChange","target","value","useForm","description","heroesFilter","toLocaleLowerCase","trim","getHeroesByName","onSubmit","event","preventDefault","placeholder","autoComplete","onChange","DashBoardRoutes","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","logged","authReducer","state","action","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2c934418.chunk.js","sourcesContent":["export const heroes = [\r\n{\r\n'id': 'dc-batman',\r\n'superhero':'Batman', \r\n'publisher':'DC Comics', \r\n'alter_ego':'Bruce Wayne',\r\n'first_appearance':'Detective Comics #27',\r\n'characters':'Bruce Wayne'\r\n},\r\n{\r\n'id': 'dc-superman',\r\n'superhero':'Superman', \r\n'publisher':'DC Comics', \r\n'alter_ego':'Kal-El',\r\n'first_appearance':'Action Comics #1',\r\n'characters':'Kal-El'\r\n},\r\n{\r\n'id': 'dc-flash',\r\n'superhero':'Flash', \r\n'publisher':'DC Comics', \r\n'alter_ego':'Jay Garrick',\r\n'first_appearance':'Flash Comics #1',\r\n'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n},\r\n{\r\n'id': 'dc-green',\r\n'superhero':'Green Lantern', \r\n'publisher':'DC Comics', \r\n'alter_ego':'Alan Scott',\r\n'first_appearance':'All-American Comics #16',\r\n'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n},\r\n{\r\n'id': 'dc-arrow',\r\n'superhero':'Green Arrow', \r\n'publisher':'DC Comics', \r\n'alter_ego':'Oliver Queen',\r\n'first_appearance':'More Fun Comics #73',\r\n'characters':'Oliver Queen'\r\n},\r\n{\r\n'id': 'dc-wonder',\r\n'superhero':'Wonder Woman', \r\n'publisher':'DC Comics', \r\n'alter_ego':'Princess Diana',\r\n'first_appearance':'All Star Comics #8',\r\n'characters':'Princess Diana'\r\n},\r\n{\r\n'id': 'dc-martian',\r\n'superhero':'Martian Manhunter', \r\n'publisher':'DC Comics', \r\n'alter_ego':'J\\'onn J\\'onzz',\r\n'first_appearance':'Detective Comics #225',\r\n'characters':'Martian Manhunter'\r\n},\r\n{\r\n'id': 'dc-robin',\r\n'superhero':'Robin/Nightwing', \r\n'publisher':'DC Comics', \r\n'alter_ego':'Dick Grayson',\r\n'first_appearance':'Detective Comics #38',\r\n'characters':'Dick Grayson'\r\n},\r\n{\r\n'id': 'dc-blue',\r\n'superhero':'Blue Beetle', \r\n'publisher':'DC Comics', \r\n'alter_ego':'Dan Garret',\r\n'first_appearance':'Mystery Men Comics #1',\r\n'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n},\r\n{\r\n'id': 'dc-black',\r\n'superhero':'Black Canary', \r\n'publisher':'DC Comics', \r\n'alter_ego':'Dinah Drake',\r\n'first_appearance':'Flash Comics #86',\r\n'characters':'Dinah Drake, Dinah Lance'\r\n},\r\n{\r\n'id': 'marvel-spider',\r\n'superhero':'Spider Man', \r\n'publisher':'Marvel Comics', \r\n'alter_ego':'Peter Parker',\r\n'first_appearance':'Amazing Fantasy #15',\r\n'characters':'Peter Parker'\r\n},\r\n{\r\n'id': 'marvel-captain',\r\n'superhero':'Captain America', \r\n'publisher':'Marvel Comics', \r\n'alter_ego':'Steve Rogers',\r\n'first_appearance':'Captain America Comics #1',\r\n'characters':'Steve Rogers'\r\n},\r\n{\r\n'id': 'marvel-iron',\r\n'superhero':'Iron Man', \r\n'publisher':'Marvel Comics', \r\n'alter_ego':'Tony Stark',\r\n'first_appearance':'Tales of Suspense #39',\r\n'characters':'Tony Stark'\r\n},\r\n{\r\n'id': 'marvel-thor',\r\n'superhero':'Thor', \r\n'publisher':'Marvel Comics', \r\n'alter_ego':'Thor Odinson',\r\n'first_appearance':'Journey into Myster #83',\r\n'characters':'Thor Odinson'\r\n},\r\n{\r\n'id': 'marvel-hulk',\r\n'superhero':'Hulk', \r\n'publisher':'Marvel Comics', \r\n'alter_ego':'Bruce Banner',\r\n'first_appearance':'The Incredible Hulk #1',\r\n'characters':'Bruce Banner'\r\n},\r\n{\r\n'id': 'marvel-wolverine',\r\n'superhero':'Wolverine', \r\n'publisher':'Marvel Comics', \r\n'alter_ego':'James Howlett',\r\n'first_appearance':'The Incredible Hulk #180',\r\n'characters':'James Howlett'\r\n},\r\n{\r\n'id': 'marvel-daredevil',\r\n'superhero':'Daredevil', \r\n'publisher':'Marvel Comics', \r\n'alter_ego':'Matthew Michael Murdock',\r\n'first_appearance':'Daredevil #1',\r\n'characters':'Matthew Michael Murdock'\r\n},\r\n{\r\n'id': 'marvel-hawkeye',\r\n'superhero':'Hawkeye', \r\n'publisher':'Marvel Comics', \r\n'alter_ego':'Clinton Francis Barton',\r\n'first_appearance':'Tales of Suspense #57',\r\n'characters':'Clinton Francis Barton'\r\n},\r\n{\r\n'id': 'marvel-cyclops',\r\n'superhero':'Cyclops', \r\n'publisher':'Marvel Comics', \r\n'alter_ego':'Scott Summers',\r\n'first_appearance':'X-Men #1',\r\n'characters':'Scott Summers'\r\n},\r\n{\r\n'id': 'marvel-silver',\r\n'superhero':'Silver Surfer', \r\n'publisher':'Marvel Comics', \r\n'alter_ego':'Norrin Radd',\r\n'first_appearance':'The Fantastic Four #48',\r\n'characters':'Norrin Radd'\r\n}\r\n]","module.exports = __webpack_public_path__ + \"static/media/superheroe.a1361526.svg\";","// Este archivo solo va a contener un objeto\r\n// con todos los tipos (types) que vamos a manejar en \r\n// el reducer. Esto es para evitar errores. \r\n// Recordar que casa string del valor de la propiedad\r\n// debe de ser unico\r\n\r\nexport const types={\r\n  login: '[auth] login',\r\n  logout: '[auth] logout'\r\n}","// creando el Context\r\n// Recordar que el context es un componente de orden superior\r\n\r\nimport { createContext } from \"react\";\r\n\r\n\r\nexport const AuthContext = createContext() \r\n","import React, { useContext } from 'react'\r\nimport { types } from '../../types/types'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\n\r\n// history para poder extraer las propiedades que ya viene con el router\r\nexport const LoginScreen = ({history}) => {\r\n\r\n  // Debemos extraer el Context para usarlo\r\n  // extraemos el dispatch\r\n  const {dispatch} = useContext(AuthContext)\r\n  \r\n  const handleLogin =()=>{\r\n    \r\n    // con esto vamos a poder recuperar la ultima ruta visitada en nuestra app\r\n    // o en caso de que sea la primera vez que entra o el localStorage fue borrado\r\n    // entonces hay que direccionarlo al '/'\r\n    const lastPath = localStorage.getItem('lastPath') || '/'\r\n\r\n    // Con push vamos a la ruta que le indicamos y se guarda la pagina anterior en el historial\r\n    // history.push('/')\r\n    // Con replace vamos a la ruta que le indicamos y no se guarda la pagina anterior en el historial\r\n    // history.replace('/')\r\n    \r\n    const action = {\r\n      type:types.login,\r\n      payload:{\r\n        name:'Superamigo'\r\n      }\r\n    }\r\n    \r\n    dispatch(action)\r\n    \r\n    // Aqui ponemos la ultima ruta visitada. Esto por que si el usuario quiere\r\n    // entrar a una ratu protegida y no esta logeado no lo dejara entrar\r\n    // sin enbargo ya tendremos guardado en localStorage la ruta y asi cuando \r\n    // el usuario se loggee lo llevara directamente a la pagina que queria\r\n    history.replace(lastPath)\r\n\r\n    // Esta es la forma de corta de hacerlo sin tener que crear el action\r\n    // dispatch({\r\n    //   type:types.login,\r\n    //   payload:{\r\n    //     name:'Superamigo'\r\n    //   }\r\n    // })\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"container text-center\">\r\n      <h1 className=\"display-2 mt-5\">Login Screen</h1>\r\n      <hr className=\"pb-5\" />\r\n      <button\r\n        type=\"button\" \r\n        className=\"btn btn-outline-dark btn-lg\"\r\n        onClick={handleLogin}\r\n      >\r\n        Login\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nimport img from '../../superheroe.svg'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { types } from '../../types/types'\r\n\r\nexport const Navbar = () => {\r\n\r\n    // Funcion para hacer funcionar el menú responsive \r\n    const hidden = () =>{\r\n        const menu = document.querySelector('#navbarSupportedContent');\r\n        menu.classList.toggle('none')\r\n    }\r\n\r\n    // Debemos extraer el Context para usarlo\r\n    // desestructuramos el user del Context y obtenemos el valor de la propiedad name\r\n    const {user:{name}, dispatch} = useContext(AuthContext)\r\n\r\n    // Funcion para manejar el Logout\r\n    // Pra manejar el logout primero debemos extraer el Context para usarlo\r\n    // extraemos el dispatch para enviar informacion al reducer\r\n    // const {dispatch} = useContext(AuthContext)\r\n\r\n    // Para que el boton de Logout nos regrese a la pantalla de Login no es tan facil\r\n    // esto sucede por que el Navbar solo es un componenete que no se encuentra dentro\r\n    // de los Ruoters por lo tanto no tiene acceso a la propiedad Histori de los Routers\r\n    // y esto impide que pueda ir a la pantalla de Login al presionarlo. Ya que estamos\r\n    // haciendo esto -> undefined.replace(/login) por eso nos marca un error.\r\n    // Para arreglar este problema podemos hacer uso de los Hooks que React-dom ya trae \r\n    // implementado. Al ver el Arbol de componenetes podemos notar que existe uno que se llama\r\n    // Router.Provider provider lo que hace es como su nombre nos indica proveer\r\n    // propiedades a traves del arbol de componentes y es asi como vamos a obtener el history\r\n    \r\n    // ocupamos el hook useHistory de React-router\r\n    const history = useHistory ()\r\n\r\n    const handleLogout=()=>{\r\n\r\n        const action = {\r\n            type:types.logout,\r\n        }\r\n        \r\n        dispatch(action)\r\n\r\n        history.replace('/login')\r\n    }\r\n\r\n    return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <Link className=\"navbar-brand\" to=\"/\"><img src={img} alt=\"logo\" className=\"logo\" />HeroesApp</Link>\r\n        <button \r\n            className=\"navbar-toggler\" \r\n            type=\"button\" \r\n            data-toggle=\"collapse\" \r\n            data-target=\"#navbarSupportedContent\" \r\n            aria-controls=\"navbarSupportedContent\" \r\n            aria-expanded=\"false\"\r\n            onClick={hidden} \r\n            aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav m-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/serch\">Buscar</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/marvel\">Marvel</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/dc\">DC</Link>\r\n                </li>\r\n            </ul>\r\n            <p className=\"mb-0 pl-0 nav-item nav-link text-info\">!Hola, {name}¡</p>\r\n            <button \r\n                className=\"btn btn-outline-success my-2 my-sm-0\"\r\n                onClick={handleLogout}\r\n            >Logout</button>\r\n        </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const HeroCard = ({id,superhero,alter_ego,first_appearance,characters}) => {\r\n  return (\r\n    <div className=\"card\" style={{maxWidth:540}}>\r\n      <div className=\"row no-gutters\">\r\n        <div className=\"col-md-4\">\r\n          <img src={`./assets/heroes/${id}.jpg`} className=\"card-img\" alt={superhero} />\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card-body\">\r\n            <p className=\"h4\">{superhero}</p>\r\n            <p className=\"card-text\">{alter_ego}</p>\r\n            {(alter_ego!==characters) && <p className=\"card-text\">{characters}</p>}\r\n            <p className=\"card-text text-muted\">{first_appearance}</p>\r\n            <Link to={`./hero/${id}`}>Más...</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\r\nimport { HeroCard } from './HeroCard'\r\n\r\nexport const HeroesList = ({publisher}) => {\r\n\r\n  // const heroes = getHeroesByPublisher(publisher)\r\n\r\n  // Reemplazamos la linea de arriba por el useMemo ya que esto optimiza\r\n  // el rendimiento de la app ya que esta funcion solo se deberia de llamar solo\r\n  // si el publisher cambia y no cuando el state o el componenete se renderiza\r\n  // esto es bueno hacer si nuestro proceso es muy pesado.\r\n  // entre los [ ] debemos poner las dependecias es decir cuando haya cambias en\r\n  // esa dependencia es cuando debe de memorizar otra vez\r\n  const heroes= useMemo(() => getHeroesByPublisher(publisher), [publisher])\r\n\r\n  return (\r\n    <div className=\"card-columns animate__animated animate__bounceInRight\">\r\n      {\r\n        heroes.map(hero=>(\r\n          <HeroCard\r\n            key={hero.id}\r\n            {...hero}\r\n          /> \r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import { heroes } from \"../data/heroes\"\r\n\r\nexport const getHeroesByPublisher=(publisher)=>{\r\n\r\n  // validando que el usuario escriba las unicas opciones que tenemos\r\n  const validPublishers=['DC Comics', 'Marvel Comics']\r\n\r\n  if (!validPublishers.includes(publisher)) {\r\n    throw new Error(`Publisher \"${publisher}\" no es correcto`)\r\n  }\r\n\r\n  return heroes.filter(hero=>hero.publisher===publisher)\r\n} ","import React from 'react'\r\nimport { HeroesList } from '../heroes/HeroesList'\r\n\r\nexport const MarvelScreen = () => {\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"mt-5 display-3\">Marvel Screen</h1>\r\n      <hr className=\"pb-5\" />\r\n      <HeroesList \r\n        publisher=\"Marvel Comics\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","const { heroes } = require(\"../data/heroes\");\r\n\r\nexport const getHeroesById=(id)=>{\r\n\r\n  return heroes.find(hero=>hero.id===id)\r\n} ","import React, { useMemo } from 'react'\r\nimport { useParams, Redirect } from 'react-router-dom'\r\nimport { getHeroesById } from '../../selectors/getHeroById'\r\n\r\nexport const HeroesScreen = ({history}) => {\r\n\r\n  // Para extraer los parametros que vengan en el url\r\n  // const params=useParams()\r\n  // console.log(params)\r\n\r\n  const {heroeId}=useParams()\r\n\r\n  // const hero= getHeroesById(heroeId)\r\n  // reemplazamos la linea de arriba por el useMemo \r\n  const hero= useMemo(() => getHeroesById(heroeId), [heroeId])\r\n\r\n\r\n  // validando que sea una url valida y si no lo es que direccione a la pagina inicial\r\n  if (!hero) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  const handleReturn = () =>{\r\n    // validar por si llevamos directamente a un url en especifico\r\n    // el botos de regresar no nos saque de la aplicacion\r\n    if (history.length<=2) {\r\n      history.push('/')\r\n    } else {\r\n      history.goBack()\r\n    }\r\n  }\r\n\r\n  // desestructurando las propiedades de los heroes\r\n  const {superhero, publisher, alter_ego,first_appearance, characters} = hero\r\n\r\n  return (\r\n    <div className=\"row mt-5\">\r\n      <div className=\"col-12 col-md-4\">\r\n        <img src={`../assets/heroes/${heroeId}.jpg`} alt={superhero} className=\"img-thumbnail animate__animated animate__backInDown\" />\r\n      </div>\r\n      <div className=\"col-12 col-md-8\">\r\n        <h1 className=\"display-2\">{superhero}</h1>\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li className=\"list-group-item\"><span className=\"font-weight-bold\">Alter ego: </span>{alter_ego}</li>\r\n          <li className=\"list-group-item\"><span className=\"font-weight-bold\">Compañia: </span>{publisher}</li>\r\n          <li className=\"list-group-item\"><span className=\"font-weight-bold\">Primera aparición: </span>{first_appearance}</li>\r\n        </ul>\r\n        <p className=\"h3 mt-4\">Personas que han sido este heroé:</p>\r\n        <p className=\"lead mt-3\">{characters}</p>\r\n        <button className=\"btn btn-outline-dark btn-lg\" onClick={handleReturn}>Regresar</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { HeroesList } from '../heroes/HeroesList'\r\n\r\nexport const DcScreen = () => {\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"mt-5 display-3\">DC Screen</h1>\r\n      <hr className=\"pb-5\" />\r\n      <HeroesList \r\n        publisher=\"DC Comics\" \r\n      />\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport queryString from 'query-string'\r\n\r\nimport { HeroCard } from '../heroes/HeroCard'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName'\r\n\r\n// necesitamos desestructurar history para para ocupar sus metodos \r\n// y hacer uso de los query strings\r\n\r\nexport const SearchScreen = ({history}) => {\r\n\r\n  // usando el hook location de reac-dom para manejar el querystring\r\n  const location = useLocation()\r\n\r\n  // intalar npm i query-string para poder parsear los query string\r\n  // desestructurando el query \"q\" que es lo unico que nos interesa de toda la cadena\r\n  // Lo igualamos a un string vacio para que no de un error si no se envia nada\r\n  const {q = ''} = queryString.parse(location.search)\r\n\r\n  // NOTA: Para que el hook useForm funcione es indispensable que el input\r\n  // tenga la propiedad \"name\"\r\n  const [{description}, handleInputChange, reset] = useForm({\r\n    description: ''\r\n  })\r\n  \r\n  // usando el useMemo para que la busqueda solo se renderice al enviar el querystring\r\n  const heroesFilter = useMemo(() => getHeroesByName(q), [q])\r\n\r\n  const handleSubmit = (event) =>{\r\n    event.preventDefault()\r\n    if(description.trim().length <=1){\r\n      return\r\n    }\r\n    // console.log(description)\r\n    history.push(`?q=${description}`)\r\n    reset()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"mt-5 display-3\">Search Screen</h1>\r\n      <hr className=\"pb-5\" />\r\n      <div className=\"row\">\r\n        <div className=\"col-md-5\">\r\n          <p className=\"h2 pb-3\">Buscador</p>\r\n          <hr className=\"pb-3\" />\r\n          <form\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <input \r\n              type=\"text\" \r\n              placeholder=\"Busca tu héroe\" \r\n              className=\"form-control mb-4\"\r\n              autoComplete=\"off\"\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={handleInputChange}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn btn-outline-dark btn-block btn-lg\"\r\n            >\r\n              Buscar\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"col-md-7\">\r\n          <p className=\"h2 pb-3\">Resultados</p>\r\n          <hr className=\"pb-3\" />\r\n\r\n          {\r\n            (q==='') &&\r\n            <div className=\"alert alert-info\">\r\n              busca un héroe\r\n            </div>\r\n          }\r\n          \r\n          {\r\n            (q !=='' && heroesFilter.length=== 0 ) &&\r\n            <div className=\"alert alert-danger\">\r\n              El héroe {q} no existe\r\n            </div>\r\n          }\r\n\r\n          {\r\n            heroesFilter.map(hero=>(\r\n              <HeroCard \r\n                key={hero.id}\r\n                {...hero}\r\n              />\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import {useState} from 'react'\r\n\r\nexport const useForm = (initialState={}) => {\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    // Para resetear los campos del formulario\r\n    const reset= () =>{\r\n        setValues(initialState)\r\n    }\r\n\r\n    // NOTA DE INGLES: handle significa encargarse de\r\n    \r\n    // del evento \"e\" estamos desestructurando el target\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]:target.value\r\n        })\r\n    }\r\n\r\n    // podemos retornarlo como queramos en arreglo o en objeto\r\n    return [values, handleInputChange, reset]\r\n}\r\n","import { heroes } from \"../data/heroes\"\r\n\r\nexport const getHeroesByName = (name='') => {\r\n\r\n  if(name===''){\r\n    return []\r\n  }\r\n\r\n  name = name.toLocaleLowerCase().trim();\r\n\r\n  return heroes.filter(hero=>hero.superhero.toLocaleLowerCase().includes(name))\r\n}\r\n","import React from 'react'\r\nimport { Navbar } from '../components/ui/Navbar'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen'\r\nimport { HeroesScreen } from '../components/heroes/HeroesScreen'\r\nimport { DcScreen } from '../components/dc/DcScreen'\r\nimport { SearchScreen } from '../components/search/SearchScreen'\r\n\r\nexport const DashBoardRoutes = () => {\r\n  // Se crea un segundo router para manejar las rutas hijas\r\n  return (\r\n    <>\r\n      <Navbar />\r\n\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route exact path=\"/marvel\" component={MarvelScreen} />\r\n          <Route exact path=\"/dc\" component={DcScreen} />\r\n          <Route exact path=\"/hero/:heroeId\" component={HeroesScreen} />\r\n          <Route exact path=\"/serch\" component={SearchScreen} />\r\n\r\n          <Redirect to=\"/marvel\" />\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n// Este componente va a ser el encargado de verificar si el usuario esta\r\n// autentificado o no. Para de esta menera proteger las rutas y que no se\r\n// pueda entrar directamente si el usuario se sabe el url\r\n\r\nexport const PrivateRoute = ({\r\n  // vamos a recibir propiedades para saber la autentificacion\r\n  isAuthenticated,\r\n  // NEcesitamos recibir el componenete que queremos renderizar\r\n  component:Component,\r\n  // las demas argumentos lo recuperamos con el operador rest ya que no las ocuparemos\r\n  // pero otros componentes si entonces esto es solo como un puente\r\n  ...rest\r\n}) => {\r\n\r\n  // grabamos en el local estorage la ultima ruta visitada. Esto es posible gracias\r\n  // a las propiedades location y pathname del react route\r\n  localStorage.setItem('lastPath', rest.location.pathname)\r\n\r\n  return (\r\n    <Route {...rest}\r\n      // hacer la validacion renderizar el componenete o no\r\n      component={(props)=>(\r\n        // hacemos el ternario si el usuario esta autentificado entonces renderizamos\r\n        // el componente caso contrario lo redireccionamos al login\r\n        (isAuthenticated) ? (<Component {...props}/>) : (<Redirect to=\"/login\" />)\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component:Component,\r\n  ...rest\r\n}) => {\r\n  \r\n  return (\r\n    <Route {...rest}\r\n      component={(props)=>(\r\n        // hacemos el ternario si el usuario NO esta autentificado entonces renderizamos\r\n        // el componente actual en el que esta que es el de login\r\n        // Si el usuario SI esta autentificado entonces lo redireccionamos al /\r\n        // Esto para que el usuario que ya esta autentificado NO pueda entrar a la pantalla\r\n        // de login ya sea escribiendo la url o regresando con el boton atras \r\n        (!isAuthenticated) ? (<Component {...props}/>) : (<Redirect to=\"/\" />)\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}","import React, { useContext } from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/login/LoginScreen';\r\nimport { DashBoardRoutes } from './DashBoardRoutes';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n  // como necesitamos enviar el valor booleano del user\r\n  // entonces debemos traer el Context\r\n  const {user} = useContext(AuthContext)\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          {/* <Route ..../> <-Asi se usa cuando no protejemos las rutas*/}\r\n          <PublicRoute \r\n            exact path=\"/login\" \r\n            component={LoginScreen} \r\n            isAuthenticated={user.logged}\r\n          />\r\n\r\n          {/* esta es la ruta que queremos proteger por lo tanto es a esta\r\n          a la que debemos aplicar el PrivateRuter */}\r\n          <PrivateRoute \r\n            path=\"/\" \r\n            component={DashBoardRoutes}  \r\n            isAuthenticated={user.logged}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","// Creando nuestro reducer para hacer autentificación\r\n// Recordar que los reducer no son mas que simples funciones de JS\r\n\r\nimport { types } from \"../types/types\";\r\n\r\n// recordar que los reducer reciben como argumentos el estado y un action\r\n\r\nexport const authReducer = (state={}, action) => {\r\n  \r\n  // los reducer usualmente siempre se manejan con un switch\r\n\r\n  switch (action.type) {\r\n    case types.login:\r\n      return{\r\n        ...action.payload,\r\n        logged:true\r\n      }\r\n    case types.logout:\r\n      return{\r\n        logged:false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n\r\n\r\n}\r\n","import React, { useReducer, useEffect } from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport './index.css'\r\nimport { AuthContext } from './auth/AuthContext'\r\nimport { authReducer } from './auth/authReducer'\r\n\r\n// creando el estado inicial cuando se usa localstorage\r\nconst init = () =>{\r\n  // revisar el localstorage para encontrar el estado inicial y si no lo encuentra\r\n  // regresar el estado inicial como false\r\n  return JSON.parse(localStorage.getItem('user')) || {logged:false}\r\n\r\n}\r\n\r\n\r\nexport const HeroesApp = () => {\r\n\r\n  // Creando un useReducer que vamos a mandar como value del AuthContext \r\n  // y es lo que se va distribuir a toda la app\r\n  // Con esto ahora tenemos la posibilidad de hacer dispatch y obtener el user\r\n  // a lo largo de toda la aplicacion\r\n  const [user, dispatch] = useReducer(authReducer, {}, init)\r\n\r\n  // implementando useEffect para guardar el user en el localStorage\r\n  // Para guardar los datos en localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('user', JSON.stringify(user))\r\n  }, [user])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{user, dispatch}}>\r\n      <AppRouter />\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\nReactDOM.render(\n  <HeroesApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}